syntax = "proto3";

package posts;

service PostService {
  // Post --
  rpc GetAllPosts (GetAllPostsRequest) returns (PostsResponse);
  rpc GetRandomPosts (GetAllPostsRequest) returns (PostsResponse);
  rpc GetPostsDeleted (GetAllPostsRequest) returns (PostsResponse);
  rpc GetTotalPosts (GetTotalPostsRequest) returns (TotalPostsResponse);
  rpc GetPostId (GetPostIdRequest) returns (PostResponse);
  rpc CreatePost (CreatePostRequest) returns (PostResponse);
  rpc CheckPostExists (CheckPostExistsRequest) returns (CheckPostExistsResponse);
  rpc UpdatePost (UpdatePostRequest) returns (PostResponse);
  rpc DeletePost (DeletePostRequest) returns (DeletePostResponse);

  // Like --
  rpc GetAllLikes (GetAllLikesRequest) returns (LikesResponse);
  rpc GetLikeId (GetLikeIdRequest) returns (LikeResponse);
  rpc CreateLike (CreateLikeRequest) returns (LikeResponse);
  rpc CheckLikeExists (CheckLikeExistsRequest) returns (CheckLikeExistsResponse);
  rpc ToggleLike (CreateLikeRequest) returns (ToggleLikeResponse);

  // Comment --
  rpc GetAllComments (GetAllCommentsRequest) returns (CommentsResponse);
  rpc GetCommentId (GetCommentIdRequest) returns (CommentResponse);
  rpc CreateComment (CreateCommentRequest) returns (CommentResponse);
  rpc CheckCommentExists (CheckCommentExistsRequest) returns (CheckCommentExistsResponse);
  rpc UpdateComment (UpdateCommentRequest) returns (CommentResponse);
  rpc DeleteComment (DeleteCommentRequest) returns (DeleteCommentResponse);

  // LikeComment --
  rpc GetAllLikesComment (GetAllLikesCommentRequest) returns (LikesCommentResponse);
  rpc GetLikeCommentId (GetLikeCommentIdRequest) returns (LikeCommentResponse);
  rpc CreateLikeComment (CreateLikeCommentRequest) returns (LikeCommentResponse);
  rpc CheckLikeCommentExists (CheckLikeCommentExistsRequest) returns (CheckLikeCommentExistsResponse);
  rpc ToggleLikeComment (CreateLikeCommentRequest) returns (ToggleLikeCommentResponse);
}

// Post --
message GetAllPostsRequest {
  int32 page = 1;
  int32 take = 2;
  int32 skip = 3;
  string content = 4;
  string userId = 5;
}

message GetTotalPostsRequest {
  string period = 1;
}

message GetPostIdRequest {
  string id = 1;
}

message CreatePostRequest {
  string content = 1;
  repeated bytes mediaPath = 2;
  string userId = 3;
}

message CheckPostExistsRequest {
  string id = 1;
}

message CheckPostExistsResponse {
  bool exists = 1;
}

message UpdatePostRequest {
  string id = 1;
  string content = 2;
  repeated bytes mediaPath = 3;
  string userId = 4;
}

message PostResponse {
  string id = 1;
  string content = 2;
  repeated string mediaPath = 3;
  string createdAt = 4;
  string createdBy = 5;
  string updatedAt = 6;
  string updatedBy = 7;
  string deletedAt = 8;
  string deletedBy = 9;
  string userId = 10;
  UserInfo userInfo = 11;
  int32 likeCount = 12;
  int32 commentCount = 13;
  bool isLiked = 14;
}

message TotalPostsResponse {
  int32 total = 1;
  int32 oldCount = 2;
  int32 currentCount = 3;
  int32 percentagePostChange = 4;
  map<int32, int32> joinCounts = 5;
}

message UserInfo {
    string id = 1;
    string username = 2;
    string profilePicture = 3;
}

message PostsResponse {
  repeated PostResponse data = 1;
  PageMeta meta = 2;
  string message = 3;
}

message DeletePostRequest {
  string id = 1;
}

message DeletePostResponse {
  string data = 1;
  string message = 2;
}

// Like --
message GetAllLikesRequest {
  int32 page = 1;
  int32 take = 2;
  int32 skip = 3;
  string post = 4;
}

message GetLikeIdRequest {
  string id = 1;
}

message CreateLikeRequest {
  string postId = 1;
  string userId = 2;
}

message CheckLikeExistsRequest {
  string id = 1;
}

message CheckLikeExistsResponse {
  bool exists = 1;
}

message LikeResponse {
  string id = 1;
  string postId = 2;
  string userId = 3;
  string createdAt = 4;
  string createdBy = 5;
  string updatedAt = 6;
  string updatedBy = 7;
  string deletedAt = 8;
  string deletedBy = 9;
}

message LikesResponse {
  repeated LikeResponse data = 1;
  PageMeta meta = 2;
  string message = 3;
}

message ToggleLikeResponse {
  LikeResponse data = 1;
  string message = 2;
}

// Comment --
message GetAllCommentsRequest {
  int32 page = 1;
  int32 take = 2;
  int32 skip = 3;
  string postId = 4;
  string userId = 5;
}

message GetCommentIdRequest {
  string id = 1;
}

message CreateCommentRequest {
  string content = 1;
  repeated bytes mediaPath = 2;
  string postId = 3;
  string userId = 4;
}

message CheckCommentExistsRequest {
  string id = 1;
}

message CheckCommentExistsResponse {
  bool exists = 1;
}

message UpdateCommentRequest {
  string id = 1;
  string content = 2;
  repeated bytes mediaPath = 3;
  string postId = 4;
  string userId = 5;
}

message CommentInfoResponse {
  string id = 1;
  string content = 2;
  repeated string mediaPath = 3;
  string createdAt = 4;
  string createdBy = 5;
  string updatedAt = 6;
  string updatedBy = 7;
  string deletedAt = 8;
  string deletedBy = 9;
  string postId = 10;
  string userId = 11;
  UserInfo user = 12;
  int32 likeCount = 13;
  string isLiked = 14;
}

message CommentResponse {
  string id = 1;
  string content = 2;
  repeated string mediaPath = 3;
  string createdAt = 4;
  string createdBy = 5;
  string updatedAt = 6;
  string updatedBy = 7;
  string deletedAt = 8;
  string deletedBy = 9;
  string postId = 10;
  string userId = 11;
  UserInfo user = 12;
}

message CommentsResponse {
  repeated CommentInfoResponse data = 1;
  PageMeta meta = 2;
  string message = 3;
}

message DeleteCommentRequest {
  string id = 1;
}

message DeleteCommentResponse {
  string data = 1;
  string message = 2;
}

// LikeComment messages

message GetAllLikesCommentRequest {
  int32 page = 1;
  int32 take = 2;
  int32 skip = 3;
  string comment = 4;
}

message GetLikeCommentIdRequest {
  string id = 1;
}

message CreateLikeCommentRequest {
  string commentId = 1;
  string userId = 2;
}

message CheckLikeCommentExistsRequest {
  string id = 1;
}

message CheckLikeCommentExistsResponse {
  bool exists = 1;
}

message LikeCommentResponse {
  string id = 1;
  string commentId = 2;
  string userId = 3;
  string createdAt = 4;
  string createdBy = 5;
  string updatedAt = 6;
  string updatedBy = 7;
  string deletedAt = 8;
  string deletedBy = 9;
}

message LikesCommentResponse {
  repeated LikeCommentResponse data = 1;
  PageMeta meta = 2;
  string message = 3;
}

message ToggleLikeCommentResponse {
  LikeCommentResponse data = 1;
  string message = 2;
}

// DTOs --
message PageMeta {
  int32 page = 1;
  int32 take = 2;
  int32 itemCount = 3;
  int32 pageCount = 4;
  bool hasPreviousPage = 5;
  bool hasNextPage = 6;
}
